1 General questions
1.1 Who is responsible for Wine?
Wine is available thanks to the work of many people around the world. Some companies that are or have been involved with Wine development are CodeWeavers, Bordeaux, TransGaming, Corel, Macadamian and Google. See Acknowledgements and Wine History.

1.2 Does Wine hurt Linux or other free operating systems?
Wine increases the usefulness of Linux, makes it easier for users to switch to free operating systems, and for Windows developers to make applications that work on them. This greatly raises Linux marketshare, drawing more commercial and community developers to Linux.

1.3 Is Wine an emulator? There seems to be disagreement
There is a lot of confusion about this, particularly caused by people getting Wine's name wrong and calling it WINdows Emulator.

When users think of an emulator, they tend to think of things like game console emulators or virtualization software. However, Wine is a compatibility layer - it runs Windows applications in much the same way Windows does. There is no inherent loss of speed due to "emulation" when using Wine, nor is there a need to open Wine before running your application.

That said, Wine can be thought of as a Windows emulator in much the same way that Windows Vista can be thought of as a Windows XP emulator: both allow you to run the same applications by translating system calls in much the same way. Setting Wine to mimic Windows XP is not much different from setting Vista to launch an application in XP compatibility mode.

A few things make Wine more than just an emulator:

Sections of Wine can be used on Windows. Some virtual machines use Wine's OpenGL-based implementation of Direct3D on Windows rather than truly emulate 3D hardware.
Winelib can be used for porting Windows application source code to other operating systems that Wine supports to run on any processor, even processors that Windows itself does not support.
"Wine is not just an emulator" is more accurate. Thinking of Wine as just an emulator is really forgetting about the other things it is. Wine's "emulator" is really just a binary loader that allows Windows applications to interface with the Wine API replacement.

1.4 What is the difference between Wine, CrossOver, and Cedega?
Wine is the base of the project, where most of the work is being done. Wine is not perfect, but tens of thousands of people nevertheless use "vanilla" Wine successfully to run a large number of Windows programs.

CrossOver XI (formerly CrossOver Office) is a product made by a company called CodeWeavers that is based directly on Wine with a few tweaks and proprietary add-ons. Unlike the biweekly Wine releases, CrossOver releases are rigorously tested for compatibility with CodeWeavers' supported applications in order to prevent "regressions". CodeWeavers employs a large proportion of the Wine developers and provides a great deal of leadership for the project. All improvements to Wine eventually work their way into CrossOver.

Cedega (formerly WineX) is a product from a company called TransGaming. TransGaming based their product on Wine back in 2002 when Wine had a different license, closed their source code, and rebranded their version as specialized for gamers. In the years since Cedega was originally created from Wine, development on Wine and Cedega have continued mostly independently. TransGaming currently gives back very little code to Wine. Cedega is not "Wine with more gaming support" - because Wine has had years of development since Cedega was made, and many games actually run better under Wine than under Cedega. Currently, Wine has more advanced Direct3D support than Cedega, but Cedega still has more advanced copy protection support due to TransGaming's licensing of (closed source) code from a handful of copy protection companies. Unlike CrossOver, most improvements to Wine don't get into Cedega due to the license differences between Cedega and Wine.

For more information, see Wine History.

1.5 How does the Wine version numbering system work?
See Wine_User's_Guide#Wine_from_WineHQ.

1.6 Do I have to use the command line?
Normally you do not have to use the command line to use Wine in Linux. You can use a graphical interface for most things, much like on Windows. In many cases you can right-click an installer and select "Open with Wine", or just double-click it. You can start installed programs using the shortcut icon or menu.

However, there are several situations when you might need to use the command line. The most common reason is to get debug output when your program does not run properly. You might also want to use utilities such as regedit that do not have menu shortcuts (note that you can create them using whatever tools your DE provides).

This does not hold true for Mac OS X Wine usage, which is all command line currently, unless you use a third party application.

1.7 What applications run well with Wine?
Thousands of applications work well. As a general rule, simpler or older applications tend to work well, and the latest versions of complex applications or games tend to not work well yet. See the Wine Application Database for details on individual applications. If your application is rated Silver, Gold or Platinum, you're probably okay; if it's rated Bronze or Garbage, Wine isn't really ready to run it for most users. If there aren't any reports using a recent version of Wine, however, your best bet is to simply try and see. If it doesn't work, it probably isn't your fault, Wine is not yet complete. Ask for help on the forum if you get stuck.

1.8 How can I help contribute to the Wine project, and in what ways?
You can contribute programming or documentation skills, or monetary or equipment donations, to aid the Wine developers in reaching their goals.

One area where every Wine user can contribute to this project is by sending high quality bug reports to our Bugzilla and helping the developers with any followup questions that they may have about your bug. It is impossible and impractical for a developer to have a copy of every program on the market, so we need your help even after your initial bug report. If a developer has a good idea what might be causing the bug, he or she may ask if you can try a patch and see if it fixes the problem. If the patch works and then makes its way into our main development tree, the bug report will be closed, your help will be appreciated by everyone and your problem will be fixed.

For a list of ideas of how you can help, please consult the Contribute section of the main page.

1.9 I think I've found a bug. How do I report this to WineHQ?
Bug reports should be submitted to our online Bugzilla system. To increase developer productivity and facilitate a resolution to submitted bugs, please read the Wiki article on Bugs. A poor bug report may be marked INVALID and closed, leaving you no closer to resolving your problem. High quality bug reports are an essential part of making Wine better.

Please note that you should generally avoid submitting bug reports if you have used any third party applications or native DLL overrides.

1.10 Where can I get further help?
In addition to this wiki, check the Wine HQ Documentation and the users forum. If you're an ISV looking at porting an application with Winelib you can also try wine-devel.

For help with a specific application, search the Application Database, a place where users share their experiences by submitting test data, tips and tricks, and asking questions.

The IRC channel: #WineHQ on irc.freenode.net. Knowledgeable Wine users hang out there, and often developers will lurk there too. See IRC for more important information.

2 Installing Wine
2.1 What are the system requirements for Wine?
Wine, along with the operating system you use to run it, generally requires less disk space and memory than Windows itself. If you're not currently running a Windows application, Wine won't consume any resources at all other than about 20 megabytes of disk space.

Ideally, if an application runs fine in Windows, it should run fine on the same hardware using Wine, provided native drivers for your hardware are installed and equivalent to the Windows drivers. Open source Linux graphics drivers in particular are often inadequate to run games that work fine on the same hardware in Windows. If there is no native driver for your hardware, Wine will not be able to use it.

2.1.1 Does Wine run on all Unix filesystems?
Mostly. Wine is written to be filesystem independent so MS Windows applications should work on virtually any full-featured UNIX filesystem. The key exception is that not all filesystems / drivers support every feature of fat32 or NTFS. One example is that the ntfsv3 drivers do not support shared-write mmap, a feature that cannot be emulated and is used by applications such as Steam.

One other point is that Wine is a weird application in ways and some programs work better on case-insensitive filesystems (see Case Insensitive Filenames for more details).

2.1.2 Will Wine run only under X?
Until recently with projects such as Wayland, serious alternatives to x11drv weren't even on the horizon so development has focused on X. However, Wine's interface with the graphics driver is designed to be abstract so supporting future graphics systems will hopefully be straight-forward.

2.2 Which version of Wine should I use?
Short answer: Use the version that works best with the particular applications you want to run. In most cases, this will be the latest development version; however, in some cases it may take some experimenting to find it.

Longer answer: Wine development is rapid, with new releases in the development branch every two weeks or so. Functionality will usually be best with the most recent development version, however, there are cases where changes to existing code in Wine cause applications that worked well in older versions to not work in the new one (these are called regressions), as well as problems caused by the introduction of new, but as-yet-incomplete and untested, functions.

A good rule of thumb is to start with the version of Wine installed with your distro and see if that works with the applications you want to use. If it does, good! If it doesn't, upgrade. In most cases the upgrade should be to the latest development version, but it is a good idea to check Bugzilla and the AppDB for any known regressions and/or new bugs. If you find an existing bug marked STAGED, this means there is a patch for the problem in wine-staging (the experimental branch), and you should try the latest version in that branch. If there are known bugs without a STAGED patch or easy workaround, upgrade to the most recent version of Wine known to work for your application.

While Wine does have a "stable" branch, the term "stable" refers to the branch as a whole, which is infrequently updated, and (for the minor stable releases) only with bugfixes promised not to break functionality. Users of a development or staging release can achieve the same degree of stability by simply not upgrading. Note that user support for the stable branch is limited to the ability to file AppDB test reports. Users who ask for help on the forum/IRC or file bug reports for the stable branch will be asked to retest in the current development release.

The current stable, development, and staging releases are listed on the WineHQ home page. See Wine User's Guide#Wine from WineHQ for a description of the three branches and the version numbering system.

2.3 How do I install Wine?
Use a precompiled binary package for your operating system/distribution (see the Download page for links and additional information).
Compile Wine from source - if you can't find an up-to-date package for your OS/distribution
2.4 How do I solve dependency errors when trying to install Wine?
If your package manager complains about unmet dependencies when trying to install Wine, work your way backwards. Try installing whatever package your package manager complains has unmet dependencies, see what your it complains about, then try to install that. Keep working your way backwards until you solve whatever is blocking everything else.

A common problem on Ubuntu-based system is having installed a PPA version of a library that is newer than what is available in the standard repository. PPA packages may not be multiarch compatible and/or may not have i386 packages built, and since Debian/Ubuntu-based systems require the i386 and x86_64 versions of a package to be exactly the same, the user is unable to install the i386 version needed by Wine because no matching version can be found. The solution is to either change the installed version of the library back to the one from the standard repository so you can install both the 32 and 64 bit packages, or find an i386 package whose version exactly matches the one already installed.

2.5 I have a problem installing my distro's Wine package and need help
WineHQ only supports the binary packages that we build (available here, only the ones listed under 'WineHQ Binary Packages'). Consult your distro's support channels for help using your package manager and interpreting any error messages you may be receiving if you're having problems with distro packages. If you are an experienced user and believe there is a problem with the package itself and/or the repository, please report it to your distro's Wine package maintainer.

2.6 Can I install more than one Wine version on my system?
Yes, but you will have to build Wine yourself (see Building Wine), as it is not possible to have multiple distro packages installed. The easiest way to do this is to run Wine from the build directory (don't do make install). If you want to actually install multiple versions, use --prefix when building Wine to designate a different install directory for each version, e.g.

./configure prefix=path_to_install_directory && make 
then install it with

sudo make install 
On Linux, you may need to set LD_LIBRARY_PATH, like so:

export LD_LIBRARY_PATH="$PREFIX/lib:$LD_LIBRARY_PATH" 
Note that regardless of whether you install multiple versions or run them from the build directory, you will still have to designate which version of Wine you wish to use when running applications. It is also recommended that applications being run with different Wine versions be installed into separate wineprefixes.

2.7 Is there a 64 bit Wine?
Yes. 64 bit Wine has been available on Linux since 1.2. WineHQ binary packages are available for 64 bit, and most major distros package it for users. Normally, installation should be as simple as installing the Wine package for your distribution through your package manager. Check the Download page. If you are building Wine from source, see Building Wine for instructions on how to build 32 bit Wine on a 64 bit system and instructions on how to build 64 bit Wine in a shared WoW64 setup.

A few things to note:

32 bit Wine runs on both 32-bit and 64-bit Linux/Unix installations. 16-bit and 32-bit Windows applications will run on it.
64-bit Wine runs only on 64 bit installations, and so far has only been extensively tested on Linux. It requires the installation of 32 bit libraries in order to run 32 bit Windows applications. Both 32-bit and 64-bit Windows applications (should) work with it; however, there are still many bugs.
Current Wine includes support for 64 bit Wine on Mac OS X; however, this has not been tested very much, and some applications may never work due to an ABI incompatibility between Win64 and OS X.
2.8 Where can I find old Wine binary packages?
Old WineHQ binary packages are kept in their respective directories in the the WineHQ download server.

Consult your distro for information on obtaining old versions of distro Wine packages.

2.9 How do I install Wine on my netbook (eeePC, Acer Aspire One, etc.)?
If you have replaced the customized distro that came preinstalled on your netbook (Xandros, Linpus, etc.) with one of the mainstream distros that provide up-to-date Wine packages, you should be able to install Wine as normal for that distro.

If you are still using Xandros (eeePC), Linpus (Acer Aspire One) or any other customized distro, you will have to ask on your netbook's support forum. Only other users of those distros can advise you on what, if any, binary packages will work on your system, where to find them, and how to install them.

You can also try building Wine from source following the instructions in Building Wine, but you will still need to consult your netbook's support forum regarding satisfying dependencies on your particular system.

2.10 Installing on Apple
2.10.1 How do I install Wine on my Mac?
WineHQ Packages are available for macOS 10.8 and higher.
Build and install Wine using Homebrew, MacPorts, or Fink to install Wine. All support the current releases of macOS. The MacPorts installation of Wine will automatically install any necessary Dependencies for a Wine installation.
If this is too complicated, there are several third party apps you can use like Codeweavers' CrossOver Mac.
Linux: If you are running Linux on your Mac, installing Wine is as simple as installing it under Linux on a PC. Visit the Download page for more info.
2.10.2 Can I use Wine on an older Mac without an Intel chip?
No, not even in Linux. Older Macs used PowerPC processors are incompatible with code compiled for x86 (Intel and AMD) processors, unless the code is run under CPU emulation. Wine Is Not a (CPU) Emulator, nor does it include one. The Darwine project was an effort to do just that, but it has not been maintained in many years.

3 Compiling Wine
3.1 How do I compile Wine from source?
See Building Wine.

3.2 How do I apply a patch?
You have to build Wine from source; see above.

4 Uninstalling
4.1 How do I uninstall Wine?
Uninstalling Wine itself will not revert your Wine settings or uninstall your Windows apps, which are permanently stored in your user's home directory. Do not uninstall Wine if you only wish to remove all of your settings and apps. For instructions on removing your Wine settings and apps, see #How do I wipe the virtual Windows installation?

If you installed Wine with your distribution's package manager, use it again to uninstall Wine.
If you installed Wine from source, use sudo make uninstall in the source directory to remove it.
4.2 How do I uninstall individual Windows applications?
You can run Wine's uninstaller command; this is like Windows' "Add/Remove Programs" function. To uninstall 64 bit applications, including wine-mono, you need to run it with wine64. The uninstaller should remove menu and desktop entries... but it's not well tested; it might not work with all apps. See below for a reliable way to remove *all* Windows apps.

4.3 How do I clean the Open With List?
To clean Open With List, please carefully paste the following commands into a terminal:

rm -f ~/.local/share/mime/packages/x-wine*
rm -f ~/.local/share/applications/wine-extension*
rm -f ~/.local/share/icons/hicolor/*/*/application-x-wine-extension*
rm -f ~/.local/share/mime/application/x-wine-extension* 
4.4 How do I wipe the virtual Windows installation?
You can remove your virtual Windows installation and start from scratch by deleting the hidden .wine directory in your user's home directory. This will remove all of your Wine settings and Windows applications. The simplest and safest way to do this is through your file manager. Simply set your file manager to show hidden files, browse to your home directory, and delete .wine the same way you would any other directory. If you want to keep it as a backup, you can rename or move it instead. To the host system, a wineprefix is just another directory that can be deleted, moved, renamed, etc., the same as any other directory.

If you prefer to do it from the command line, carefully paste the following commands into a terminal:

cd
rm -rf .wine 
To rename it from the command line instead of deleting it:

mv ~/.wine ~/.wine-old 
Your Windows applications, though deleted, will remain in your system menu (remaining desktop files and icons are located in ~/.local/share).

To remove these leftover menu entries, carefully paste the following commands into a terminal:

rm -f ~/.config/menus/applications-merged/wine*
rm -rf ~/.local/share/applications/wine
rm -f ~/.local/share/desktop-directories/wine*
rm -f ~/.local/share/icons/????_*.{xpm,png}
rm -f ~/.local/share/icons/*-x-wine-*.{xpm,png} }}}
Alternatively, you can stop Wine from creating menu entries in the first place.

5 Installing and Running Windows Applications
5.1 I have lots of applications already installed in Windows. How do I run them in Wine?
Short answer: you have to install them in Wine just like you did in Windows. Applications usually have a setup or installer program.

Long answer: some applications can be copied from Windows to Wine and still work, but don't try this unless you like tinkering under the hood of your car while it's running.

Wine is not designed to interact with an existing Windows installation. If you have any data you need from a Windows installation, browse your Windows filesystems in your normal file manager and copy the data to another location.

Dialog-warning.svg Do not try to configure Wine to point to your actual Windows C:\ drive. This will break Windows and require a Windows reinstall. We have tried to make this hard to do, so you probably cannot do it by accident. If you do manage this, Wine may or may not continue to operate, but your Windows install will be 100% dead due to critical parts of it being overwritten. The only way to fix Windows after this has happened is to reinstall it.

5.2 How do I run an installer using Wine?
See Wine User's Guide#How to install and run Windows programs.

5.3 How do I run an application once I've installed it?
See Wine User's Guide#How to install and run Windows programs

5.4 How should I start Windows programs from the command line?
See Wine User's Guide#How to run Windows programs from the command line.

5.5 How do I pass command line arguments to a program?
See Wine User's Guide#Passing Windows command-line arguments

5.6 How do I install/run a .msi file?
See Wine User's Guide#Running .msi files.

5.7 How do I install/run a ClickOnce (.application) file?
Use winetricks to install whatever version of .NET the program requires, cd to the directory containing the .application file, and run it with

wine start whatever.application
5.8 How do I launch native applications from a Windows application?
First, run regedit and add a dot character to the end of the list of extensions in HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment\PATHEXT.

Dialog-warning.svg Note that this change will have to be made every time you upgrade Wine, as it will be reverted whenever the wineprefix is updated.

You can then start native applications using wine cmd if you specify the full path or use the shell, e.g.:

wine cmd /c /usr/bin/glxgears 
or

wine cmd /c /bin/sh -c glxgears 
You might also need winepath to translate the filename from Windows format to Linux format (see How do I associate a native program with a file type in Wine?).

5.9 My installer tells me I don't have enough free disk space
Usually, you really don't have enough free disk space. Wine's C: drive is located in your home directory. Whatever partition contains /home must have enough free space for your program. You can check by running:

df -h ~ 
If the amount of space you need is less than 1 GB, and df reports you have more than 1 GB available, try setting the Windows version to Windows 98. This will work around bugs in some old (Windows 98 era) installers that could not cope with large drives.

If you want to use a different partition that has more free space, use a wineprefix that is located on the other partition. Note that your other partition must be a Unix filesystem: FAT and NTFS partitions will not work. See #How can I run two programs as if they were on different computers? for instructions.

5.10 When I double-click on a .exe file in my file manager, nothing happens
Note: if you can, start applications by clicking on the application's icon in the Applications / Wine menu or desktop instead. Double-clicking .exe files is typically only needed for applications that aren't installed yet, e.g. to run the setup.exe on a CD-ROM game or a downloaded installer.

If double-clicking doesn't work, you might need to right-click the file and choose "Run with Wine". It depends on your file manager. If that also doesn't work, contact whoever built your Wine packages and let them know there's a problem.

You can work around this by using the command line instead of your file manager (see Wine User's Guide#How to run Windows programs from the command line).

5.11 I double-clicked on an .exe file, but the system said "The file foo.exe is not marked as executable..."
If the dialog says "Read about the executable bit", with a hyperlink, try clicking on the hyperlink and reading about the executable bit.

If the file is on your hard drive, right-click it, choose Properties / Permissions, and check "Allow executing file as program".

If the file is on a CD-ROM, you can run it from the command line as described above. Or, if you know how to use mount, remount the cd-rom to mark all files as executable with a command like mount -o remount,mode=0777,exec /media/cdrom but using the real mount point if it's different from /media/cdrom.

6 Using Wine
6.1 How do I run Wine?
Wine is not an application you run. Wine enables your computer to run Windows applications. Simply install and run your applications as you would in Windows. See #How do I run an installer using Wine?.

6.2 Should I run Wine as root?
Dialog-warning.svg NEVER run Wine as root! Doing so gives Windows programs (and viruses) full access to your computer and every piece of media attached to it. Running with sudo also has these same risks but with the added bonus of breaking the permissions on your ~/.wine folder in the process. If you have run Wine with sudo you need to fix the permission errors as described in the next question, and then run winecfg to set Wine up again. You should always run Wine as the normal user you use to login.

For Linux systems, all ideas that Wine needs root can be solved through Posix Capabilities or Posix File Capabilities or correcting other security settings.

As far as Windows programs are concerned, you are running with administrator privileges. If an application complains about a lack of administrator privileges, file a bug; running Wine as root probably won't help.

6.3 I ran wine with sudo or as root. How do I fix my permission errors?
You need to fix the permissions on your ~/.wine directory, this is where all Wine state, configuration and any important data you might have such as installed programs, saved data within Wine programs, etc. are stored. Once you delete or fix the permissions on this directory, rerun Wine as a regular user always! Run the following to fix the permissions on your ~/.wine directory if it now has root permissions.

cd $HOME
sudo chown -R $USER:$USER .wine
6.4 How do I know what version of Wine I have?
Open up a terminal and run wine --version. It will say something like "wine-1.9.2"; if you are using Git then you will have a version along the lines of "wine-1.9.2-231-gb922b55".

TIP: You can find out what the latest release of Wine is from WineHQ's main page. Currently, Wine development releases come out every two weeks. Your operating system may ship with an out of date (obsolete) version of Wine. Depending on what OS you use, you may be able to add an update source to your package management system to keep up to date. Check the Download page for details.

6.5 Wineprefixes
6.5.1 Where is my C: drive?
Wine uses a virtual C: drive instead of your real C: drive. The directory in which this is located is called a 'wineprefix.'

By default, it's in your home directory's .wine/drive_c subdirectory. (On macOS, see the macOS FAQ for how to find this.)

See also the WINEPREFIX environment variable; if this is set, wine uses it to find the wineprefix.

6.5.2 Can I store the virtual Windows installation somewhere other than ~/.wine?
Yes: ~/.wine is just the default wineprefix (a.k.a. "configuration directory" or "bottle").

You can change which prefix Wine uses by changing the WINEPREFIX environment variable (outside Wine). To do this, run something like the following in a terminal:

export WINEPREFIX=~/.wine-new
wine winecfg 
Wine will then create a new prefix in ~/.wine-new.

To use the default prefix, use the command unset WINEPREFIX . Or just set WINEPREFIX to ~/.wine.

Alternatively, you can specify the wine prefix in each command, e.g.

WINEPREFIX=path_to_wineprefix wine winecfg 
You can rename, move, copy and delete prefixes without affecting others, and each prefix has its own wineserver instance.

Wherever you see ~/.wine or $HOME/.wine in this Wiki, you can usually replace it with $WINEPREFIX.

6.5.3 How do I create a 32 bit wineprefix on a 64 bit system?
At present there are some significant bugs that prevent many 32 bit applications from working in a 64 bit wineprefix. To work around this, you can create a new 32 bit wineprefix using the WINEARCH environment variable. In a terminal, type:

WINEARCH=win32 WINEPREFIX=path_to_wineprefix winecfg 
(use the actual path to the wineprefix) Do not use an existing directory for the new wineprefix: Wine must create it.

Once a 32 bit wineprefix is created, you no longer have to specify WINEARCH in the command line to use it, as the architecture of an existing wineprefix cannot be changed. Note that if the wineprefix is not the default (~/.wine, you do have to specify the WINEPREFIX variable when installing anything (including winetricks) to it:

WINEPREFIX=path_to_wineprefix wine start /unix path_to_installer
6.5.4 Why aren't versions of Windows prior to XP available in 64 bit wineprefixes?
Short answer: because there were no 64 bit versions of Windows prior to XP.

If you are on a 64 bit system, you will have to create a 32 bit wineprefix to be able to select a version of Windows older than XP in winecfg.

6.5.5 How can I run two programs as if they were on different computers?
Example: You have server and client programs. One won't run in the presence of the other.

Using different wineprefixes will help you here, since they simulate two Windows computers, in essence.

Run the first program as normal:

wine first-program.exe
The second needs to be run in a different prefix, so we need to change the WINEPREFIX environment variable:

WINEPREFIX="$HOME/.wine-second" wine second-program.exe 
The first-program.exe and second-program.exe can be two copies of the same program.

6.6 Configuring
6.6.1 How do I get Wine to launch an application in a virtual desktop?
You can do this with winecfg. Add the application in the Applications tab and then, in the Graphics tab, enable "Emulate a virtual desktop".

You can also use the following command:

wine explorer /desktop=name,1024x768 program.exe 
Replace program.exe with the name of your program, and change the resolution to the size of the virtual desktop you want. Changing name allows you to open several desktops simultaneously.

6.6.2 How do I edit the Wine registry?
The Wine registry is stored in the .reg files in ~/.wine, however you should not edit these files by hand due to the encoding that they use. Always use the regedit program that comes with Wine. This can be run by typing wine regedit in the terminal. Wine's regedit is virtually identical to the Windows version of regedit and also supports importing and exporting of registry files. NEVER try and import your entire Windows registry, this will just break Wine.

See also: Useful Registry Keys

6.6.3 How do I associate a native program with a file type in Wine?
There are two ways using which you can associate a native program with a file type. The first method is to use winebrowser and an alternative would be to write a shell script.

The example below uses winebrowser to launch the default PDF handler on your system (on a Unix desktop it uses xdg-open). Save the lines below to a file pdf.reg.

[HKEY_CLASSES_ROOT\.pdf]
@="PDFfile"
"Content Type"="application/pdf"
[HKEY_CLASSES_ROOT\PDFfile\Shell\Open\command]
@="winebrowser \"%1\"" 
Import the .reg file into the registry using the command

regedit $HOME/pdf.reg 
Another option is to use a shell script to call a native application. Save it as run_linux_program under $HOME/bin:

#!/bin/sh $1 "`wine winepath -u "$2"`" 
Don't forget to run chmod a+x $HOME/bin/run_linux_program to make it executable. Also make sure that $HOME/bin directory is in your $PATH. Otherwise it will not work.

To associate (say) .pdf files with the acroread Linux program save the following as $HOME/pdf.reg and then import it with the command regedit $HOME/pdf.reg:

[HKEY_CLASSES_ROOT\.pdf]
@="PDFfile"
"Content Type"="application/pdf"
[HKEY_CLASSES_ROOT\PDFfile\Shell\Open\command]
@="/bin/sh run_linux_program acroread \"%1\"" 
You can reuse this script and just edit the registry file. For example to associate .doc documents with OpenOffice (ooffice):

[HKEY_CLASSES_ROOT\.doc]
@="DOCfile"
"Content Type"="application/msword"
[HKEY_CLASSES_ROOT\DOCfile\Shell\Open\command]
@="/bin/sh run_linux_program ooffice \"%1\"" 
6.6.4 How can I prevent Wine from changing the filetype associations on my system or adding unwanted menu entries/desktop links?
Tango-style info icon.svg Beginning with wine-3.14, winecfg has a "Manage File Associations" checkbox on the Desktop Integration tab. Checking it enables winemenbuilder to create file associations and unchecking it disables that behavior.

Users of older Wine versions and those who also want to disable the creation of menu items can accomplish this by disabling winemenubuilder.exe . There are several ways to do this:

In winecfg: before running the installer, run winecfg. Go to the Libraries tab and type winemenubuilder.exe into the "New overrides" box (it is not in the dropdown list). Click add, then select it from the "Existing overrides" box. Click "Edit" and select "Disable" from the list, then click "OK".
Registry file: If you need to apply the setting many times (e.g. every time you recreate the Wine prefix), this approach may be more convenient. Create a text file named with extension .reg (e.g., disable-winemenubuilder.reg) containing the following:
[HKEY_CURRENT_USER\Software\Wine\DllOverrides]
"winemenubuilder.exe"="" 
To apply the setting, run:

regedit disable-winemenubuilder.reg
Environment variable: set the WINEDLLOVERRIDES environment variable when you run the installer, e.g.,
WINEDLLOVERRIDES=winemenubuilder.exe=d wine setup.exe 
Users who frequently create new wineprefixes may wish to put WINEDLLOVERRIDES=winemenubuilder.exe=d in their .bashrc to avoid having to specify it for every wineprefix.

6.6.5 How do I disable the GUI crash dialog?
Wine includes a GUI crash dialog that is turned on by default. Users of apps that work despite a background crash may find the GUI dialog annoying, and in some cases the dialog itself has been reported to prevent an app from working.

The easiest way to disable the crash dialog is with winetricks:

sh winetricks nocrashdialog 
If you prefer to do it manually, copy the following key to a text editor:

[HKEY_CURRENT_USER\Software\Wine\WineDbg]
"ShowCrashDialog"=dword:00000000 
Save the file with a .reg extension (e.g. crashdialog.reg), then apply it with regedit:

regedit crashdialog.reg 
(You may need to specify the full path to the file, depending on where you saved it.)

To turn the GUI crash dialog back on, change 00000000 to 00000001 and reapply.

These changes can also be made by simply running regedit and adding/changing the appropriate key the point-and-click way.

6.6.6 How can I make Wine fonts anti-aliased?
Support for subpixel font rendering was added to Wine in version 1.1.12, but it may not be enabled. Use winetricks and select one of the fontsmooth-gray, fontsmooth-rgb or fontsmooth-bgr options.

6.6.7 How do I change the DPI (font size)?
First, you should try editing with winecfg. Go to the Graphics tab, and slide the "Screen Resolution" slider accordingly. Changes will not effect the winecfg window until you restart it.

If windows and fonts are so big you can't get to the controls in winecfg, see #Wine's windows and fonts are extremely large.

6.6.8 How do I configure a proxy?
If you want to use a proxy server for all HTTP connections, simply set the http_proxy environment variable. On many Linux distributions, configuring a network proxy, e.g. with the Network Proxy tool, does this for you automatically.

Alternatively, you can configure a proxy in the registry. There are separate locations for wininet.dll and winhttp.dll.

For wininet, use regedit to add the following values to the [HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings] key:

"ProxyEnable"=dword:00000001
"ProxyServer"="proxy-server-address:port" 
At present, Wine's wininet.dll does not support proxy autoconfiguration (PAC) scripts.

For winhttp, you'll need to use the proxycfg.exe utility to configure the registry. This utility is available in the system32 directory of a Windows installation, and MSDN describes its usage.

7 Limitations and Risks
7.1 Can Wine run in character mode?
Most of Wine's development effort is geared towards programs written for the Windows GUI, but some limited support for character mode is available with the "null" driver. Wine automatically activates "null" whenever x11driver isn't loaded, but even then, Wine depends on the xorg libraries.

Also the "null" driver will only work for pure console applications that never use any windowing functions (for example, parts of OLE create purely internal windows).

See Wine User's Guide#Text mode programs (CUI: Console User Interface) for more information.

7.2 Can I install applications to be shared by multiple users?
Wine does not currently allow sharing its configuration ("prefixes") between users, due to the risk of registry corruption from running multiple wineservers simultaneously bug #11112. At present, applications must be installed separately for each user.

However, you can copy Wine prefixes; you can install everything to one prefix, then make a copy of it in each user's home directory. This saves running installers repeatedly.

7.3 Can I use Wine to install drivers for my hardware?
No. Wine requires your hardware to already be working on your operating system. The technical reason for this is that Wine, like most applications, runs in user mode and not kernel mode.

7.4 Is Wine malware-compatible?
Yes. Just because Wine runs on a non-Windows OS doesn't mean you're protected from viruses, trojans, and other forms of malware.

There are several things you can do to protect yourself:

Never run executables from sites you don't trust. Infections have already happened.
In web browsers and mail clients, be suspicious of links to URLs you don't understand and trust.
Never run any application (including Wine applications) as root (see above).
Use a virus scanner, e.g. ClamAV is a free virus scanner you might consider using if you are worried about an infection; see also Ubuntu's notes on how to use ClamAV. No virus scanner is 100% effective, though.
Removing the default Wine Z: drive, which maps to the unix root directory, is a weak defense. It will not prevent Windows applications from reading your entire filesystem, and will prevent you from running Windows applications that aren't reachable from a Wine drive (like C: or D:). A workaround is to copy/move/symlink downloaded installers to ~/.wine/drive_c before you can run them.
If you're running applications that you suspect to be infected, run them as their own Linux user or in a virtual machine (the ZeroWine malware analyzer works this way).
7.5 How good is Wine at sandboxing Windows apps?
Wine does not sandbox in any way at all. When run under Wine, a Windows app can do anything your user can. Wine does not (and cannot) stop a Windows app directly making native syscalls, messing with your files, altering your startup scripts, or doing other nasty things.

You need to use AppArmor, SELinux or some type of virtual machine if you want to properly sandbox Windows apps.

Note that the winetricks sandbox verb merely removes the desktop integration and Z: drive symlinks and is not a true sandbox. It protects against errors rather than malice. It's useful for, e.g., keeping games from saving their settings in random subdirectories of your home directory.

8 Applications
8.1 What applications/services conflict with Wine?
Many distributions are moving towards enabling Compiz/Beryl/other eye candy by default. The problem is that these programs conflict with Wine over the display driver. Disable these programs before using any applications with Wine (especially games, or when noticing weird window problems). Also, disabling the Composite extension in /etc/X11/xorg.conf will most certainly prevent compositing from affecting Wine.

Keyboard tools such as IBUS, xneur (gxneur, kxneur) and SCIM have been reported to conflict with keyboard input in Wine.

8.2 Does Wine support .NET? Should I install native .NET in Wine?
Recent versions of Wine will prompt you to download wine-mono on wineprefix creation. For many .NET apps, particularly older ones, this is sufficient.

If wine-mono does not work for your app/game, file a bug (if one has not been already filed), and try native .NET. You can install it by running winetricks and selecting the appropriate .NET version. Note that native .NET can at present only be installed to a 32 bit wineprefix, so if your app/game is 64 bit, you are out of luck for now.

8.3 Does Wine support DirectX? Should I install Microsoft's DirectX under Wine?
Wine itself provides a DirectX implementation that, although it has a few bugs left, should run fine. Wine supports DirectX 9.0c at this time. Work on DirectX 10 is underway.

If you attempt to install Microsoft's DirectX, you will run into problems. It is not recommended nor supported by Wine HQ to attempt this. You can install the runtime, but it will not run. The runtime needs access to the Windows drivers, and Wine cannot access them for obvious reasons. The only native Microsoft DLLs that could be useful anyway are the d3dx9_xx.dll type ones, and these require you to accept Microsoft's license. Additionally, versions of these DLLs are now part of the Wine tree. So, as Wine improves these DLLs will only become less relevant.

That said, there are some guides out there which describe how you can install Microsoft's DirectX. We reiterate: it is not recommended nor supported by Wine HQ to attempt this. Furthermore it is considered off topic in Wine HQ support mediums (such as the forums). Please use a clean Wine configuration folder before seeking help (delete your ~/.wine or use another wineprefix and re-install your Windows applications).

8.4 Does Wine support Internet Explorer? Should I install Microsoft's Internet Explorer in Wine?
Wine uses the core of Firefox to implement its own Internet Explorer replacement (wine-gecko). Recent versions of Wine should prompt you to install it on wineprefix creation. In most cases Wine's IE replacement (wine-gecko) is sufficient.

If you really need the real IE for a specific application to work, use winetricks to install ie6, ie7 or ie8. You should put IE in a separate wineprefix, with whatever app really needs it. Note that the Wine project does not support installing the real Internet Explorer, as it requires a huge number of native DLLs, which is hard to configure. Please do not ask the Wine project for help if you run into problems.

You may also try commercial solutions, such as CrossOver, but if you do so and run into problems, do not seek help on the forum/mailing list or IRC, as third party applications such as these are not supported here.

8.5 Why doesn't Wine work well with some copy protection?
Copy protection uses several "dirty" methods to detect if discs are "real" or not. Some of these methods work in Wine but many do not, such as the extremely invasive StarForce system. Wine would need to be altered to allow for almost rootkit-like functionality of programs to get some of these copy protection schemes to work, so support is likely to be a long time off if ever (some people use illegally modified or "cracked" games with the copy protection removed, but the Wine project cannot advocate that).

See also our page on copy protection.

8.6 I followed a howto I found on a website, and the application still doesn't work
There are many unofficial howtos for various apps posted on blogs and forums. They are rarely maintained by their authors, and because of Wine's rapid rate of development, even ones that were correct at the time they were posted can quickly become outdated. Applying tweaks that are no longer needed in current Wine can actually prevent an app that now runs fine without tweaks from working at all (Office 2007 is a prime example). The only howtos supported here are the ones on this site. If you insist on following an outside one, ask its author for help.

If in doubt, start again installing the app in a fresh wineprefix and ask for help on the user forum.

8.7 I used a third party application (PlayOnLinux, WineBottler, etc.) to install or manage applications in Wine and need help
Consult the support channels for whatever third party application you used. Links to some of these outside applications are provided as a convenience on the Third Party Applications page, but they are not supported here. Before seeking help on the forum/mailing list/IRC or filing bugs, reinstall your Windows application using plain Wine.

8.8 My application worked with an older version of Wine, but now it's broken!
This is called a regression. Please perform a regression test to identify which patch caused it, then file a bug report and add the "regression" keyword: we'll pay special attention to it, since regressions are a lot easier to fix when caught early.

8.9 I really need this particular application to work. How can I go about making this happen?
Briefly, you can improve Wine yourself, convince someone else to do it for you, or try some complicated hacks involving native Windows DLLs rather than Wine's unfinished ones.

8.10 I'm writing a Windows app. How can it detect if it's running under Wine?
This is a bad idea. See the Developer FAQ.

9 Performance
9.1 My 3D application/game is very slow (FPS)
Usually a 3D performance issue, indicates that something is wrong with your OpenGL 3D drivers. See 3D Driver Issues for more information.

9.2 Is Wine slower than just using Windows?
Actually, Wine is sometimes faster. The speed of an application depends on a lot of factors: the available hardware and their drivers, the quality of the code in the APIs the application uses, and the quality of the code in the underlying operating system.

Driver code matters a lot. If you're running a graphics-heavy application using a video card with very poor drivers such as an ATI card under Linux, performance will degrade substantially. On the other hand, Linux has superior memory management, and comes out ahead of Windows in many CPU-related tasks.

Sometimes, bugs in Wine can make applications excessively slow. That said, Wine works on correctness first, performance second.

See Performance for more information.

9.3 I get lots of "fixme:" messages in the terminal and Wine runs a bit slow
Ignore them. Generally speaking, a fixme message will not make much sense to someone unfamiliar with Wine development. They are for Wine developers. Also, it's important to understand that fixme messages often do not indicate a serious problem. Many applications will work fine even though Wine prints a few fixme messages. That said, they can still sometimes provide insight into how a particular application works (or doesn't work).

If there are a very large number of these messages scrolling repeatedly, you can sometimes speed Wine up a little by turning them off altogether. You can do so by setting the WINEDEBUG environment variable to -all. For example, your command line could look something like:

WINEDEBUG=-all wine program.exe 
More advanced users and programmers interested in debugging Wine should see Debug Channels and the Developers wiki pages. Here's an example to selectively turn off fixme messages from dsound and part of D3D only:

WINEDEBUG=fixme-dsound,fixme-d3d_surface wine program.exe
10 Troubleshooting
10.1 General
10.1.1 How can I get a debugging log (a.k.a. terminal output)?
Run your application from the command line (see Wine_User's_Guide#How_to_run_Windows_programs_from_the_command_line).

You can then copy the log from the screen and paste it into a file if it's short; otherwise redirect the output of wine to a file using a Unix shell redirection, e.g.

cd ~/.wine/drive_c/Games/Tron
wine tron.exe &> log.txt 
Important: Unless you have been asked specifically to provide a debug trace then do not do so. Simply follow the instructions above.

Important: If you get a crash dialog while doing this, please click Close. Otherwise your log will be incomplete.

Important: If the resulting text file doesn't have names of C source files in it, your copy of wine probably lacks debugging symbols. Please either build wine from source, or install the debug symbols package.

10.1.2 How do I get a debug trace?
Note: Please only use this procedure when instructed. In most cases a regular terminal output is enough (see above). When filing bugs, it is often necessary to get additional debug trace (generally +relay,+seh, but you might be asked for specific debug channels). To retrieve a trace, run:

WINEDEBUG=+relay,+seh,+tid wine your_program.exe >> /tmp/output.txt 2>&1 
Then attach /tmp/output.txt to the bug. If the resulting file is larger than 1 MB, compress it with bzip2 or rzip before attaching. There are some cases where the bug seems to disappear when WINEDEBUG is used with the right channel. Please mention that in the bug report. For a list of debug channels that are available in Wine, see Debug Channels

10.2 Crashes and Freezes
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
Pereno-
sslova
